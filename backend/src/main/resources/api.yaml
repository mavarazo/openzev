openapi: '3.0.0'
info:
  version: 1.0.0
  title: OpenZEV API

paths:
  /v1/dashboard/owners:
    get:
      operationId: getOwnerOverview
      tags:
        - Dashboard
      responses:
        '200':
          description: Owner overview
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnerOverviewDto'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /v1/dashboard/units:
    get:
      operationId: getUnitOverview
      tags:
        - Dashboard
      responses:
        '200':
          description: Unit overview
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitOverviewDto'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /v1/dashboard/accountings:
    get:
      operationId: getAccountingOverview
      tags:
        - Dashboard
      responses:
        '200':
          description: Accounting overview
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingOverviewDto'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /v1/owners:
    get:
      operationId: getOwners
      tags:
        - Owner
      responses:
        '200':
          description: Owners
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OwnerDto'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    post:
      operationId: createOwner
      tags:
        - Owner
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifiableOwnerDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnerId'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /v1/owners/{ownerId}:
    delete:
      operationId: deleteOwner
      tags:
        - Owner
      parameters:
        - $ref: '#/components/parameters/OwnerParam'
      responses:
        '204':
          description: Deleted
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    get:
      operationId: getOwner
      tags:
        - Owner
      parameters:
        - $ref: '#/components/parameters/OwnerParam'
      responses:
        '200':
          description: Owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnerDto'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    put:
      operationId: changeOwner
      tags:
        - Owner
      parameters:
        - $ref: '#/components/parameters/OwnerParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifiableOwnerDto'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnerId'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /v1/properties:
    get:
      operationId: getProperties
      tags:
        - Property
      responses:
        '200':
          description: Units
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PropertyDto'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    post:
      operationId: createProperty
      tags:
        - Property
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifiablePropertyDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyId'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /v1/properties/{propertyId}:
    delete:
      operationId: deleteProperty
      tags:
        - Property
      parameters:
        - $ref: '#/components/parameters/PropertyParam'
      responses:
        '204':
          description: Deleted
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    get:
      operationId: getProperty
      tags:
        - Property
      parameters:
        - $ref: '#/components/parameters/PropertyParam'
      responses:
        '200':
          description: Property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDto'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    put:
      operationId: changeProperty
      tags:
        - Property
      parameters:
        - $ref: '#/components/parameters/PropertyParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifiablePropertyDto'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyId'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /v1/properties/{propertyId}/units:
    get:
      operationId: getUnits
      tags:
        - Unit
      parameters:
        - $ref: '#/components/parameters/PropertyParam'
      responses:
        '200':
          description: Units
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitDto'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /v1/units:
    post:
      operationId: createUnit
      tags:
        - Unit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifiableUnitDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitId'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /v1/units/{unitId}:
    delete:
      operationId: deleteUnit
      tags:
        - Unit
      parameters:
        - $ref: '#/components/parameters/UnitParam'
      responses:
        '204':
          description: Deleted
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    get:
      operationId: getUnit
      tags:
        - Unit
      parameters:
        - $ref: '#/components/parameters/UnitParam'
      responses:
        '200':
          description: Unit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitDto'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    put:
      operationId: changeUnit
      tags:
        - Unit
      parameters:
        - $ref: '#/components/parameters/UnitParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifiableUnitDto'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitId'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /v1/units/{unitId}/ownerships:
    get:
      operationId: getOwnerships
      tags:
        - Ownership
      parameters:
        - $ref: '#/components/parameters/UnitParam'
        - name: validFrom
          in: query
          schema:
            type: string
            format: date
        - name: validUpto
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Ownerships
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OwnershipDto'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /v1/ownerships:
    post:
      operationId: createOwnership
      tags:
        - Ownership
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifiableOwnershipDto'
      responses:
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnershipId'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /v1/ownerships/{ownershipId}:
    delete:
      operationId: deleteOwnership
      tags:
        - Ownership
      parameters:
        - $ref: '#/components/parameters/OwnershipParam'
      responses:
        '204':
          description: Deleted
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    get:
      operationId: getOwnership
      tags:
        - Ownership
      parameters:
        - $ref: '#/components/parameters/OwnershipParam'
      responses:
        '200':
          description: Ownership
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnershipDto'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    put:
      operationId: changeOwnership
      tags:
        - Ownership
      parameters:
        - $ref: '#/components/parameters/OwnershipParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifiableOwnershipDto'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnershipId'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /v1/accountings:
    get:
      operationId: getAccountings
      tags:
        - Accounting
      responses:
        '200':
          description: Accountings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountingDto'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    post:
      operationId: createAccounting
      tags:
        - Accounting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifiableAccountingDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingId'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /v1/accountings/{accountingId}:
    delete:
      operationId: deleteAccounting
      tags:
        - Accounting
      parameters:
        - $ref: '#/components/parameters/AccountingParam'
      responses:
        '204':
          description: Deleted
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    get:
      operationId: getAccounting
      tags:
        - Accounting
      parameters:
        - $ref: '#/components/parameters/AccountingParam'
      responses:
        '200':
          description: Accounting
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingDto'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    put:
      operationId: changeAccounting
      tags:
        - Accounting
      parameters:
        - $ref: '#/components/parameters/AccountingParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifiableAccountingDto'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingId'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /v1/accountings/{accountingId}/documents:
    get:
      operationId: getAccountingDocuments
      tags:
        - Accounting
        - Document
      parameters:
        - $ref: '#/components/parameters/AccountingParam'
      responses:
        '200':
          description: Documents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentDto'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    post:
      operationId: createAccountingDocument
      tags:
        - Accounting
        - Documents
      parameters:
        - $ref: '#/components/parameters/AccountingParam'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                  format: binary
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentId'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /v1/agreements:
    get:
      operationId: getAgreements
      tags:
        - Agreement
      responses:
        '200':
          description: Agreements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgreementDto'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    post:
      operationId: createAgreement
      tags:
        - Agreement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifiableAgreementDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgreementId'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /v1/agreements/{agreementId}:
    delete:
      operationId: deleteAgreement
      tags:
        - Agreement
      parameters:
        - $ref: '#/components/parameters/AgreementParam'
      responses:
        '204':
          description: Deleted
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    get:
      operationId: getAgreement
      tags:
        - Agreement
      parameters:
        - $ref: '#/components/parameters/AgreementParam'
      responses:
        '200':
          description: Agreement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgreementDto'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    put:
      operationId: changeAgreement
      tags:
        - Agreement
      parameters:
        - $ref: '#/components/parameters/AgreementParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifiableAgreementDto'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgreementId'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /v1/invoices:
    get:
      operationId: getInvoices
      tags:
        - Invoice
      parameters:
        - name: accountingId
          in: query
          schema:
            $ref: '#/components/schemas/AccountingId'
      responses:
        '200':
          description: Invoices
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceDto'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    post:
      operationId: createInvoice
      tags:
        - Invoice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifiableInvoiceDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceId'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /v1/invoices/{invoiceId}:
    delete:
      operationId: deleteInvoice
      tags:
        - Invoice
      parameters:
        - $ref: '#/components/parameters/InvoiceParam'
      responses:
        '204':
          description: Deleted
    get:
      operationId: getInvoice
      tags:
        - Invoice
      parameters:
        - $ref: '#/components/parameters/InvoiceParam'
      responses:
        '200':
          description: Invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDto'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    put:
      operationId: changeInvoice
      tags:
        - Invoice
      parameters:
        - $ref: '#/components/parameters/InvoiceParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifiableInvoiceDto'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceId'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /v1/documents/{documentId}:
    delete:
      operationId: deleteDocument
      tags:
        - Document
      parameters:
        - $ref: '#/components/parameters/DocumentParam'
      responses:
        '204':
          description: Deleted
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    get:
      operationId: getDocument
      tags:
        - Document
      parameters:
        - $ref: '#/components/parameters/DocumentParam'
      responses:
        '200':
          description: Document
          content:
            '*/*':
              schema:
                type: string
                format: binary
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'

components:
  parameters:
    OwnerParam:
      name: ownerId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OwnerId'

    PropertyParam:
      name: propertyId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/PropertyId'

    UnitParam:
      name: unitId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/UnitId'

    OwnershipParam:
      name: ownershipId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OwnershipId'

    AccountingParam:
      name: accountingId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/AccountingId'

    DocumentParam:
      name: documentId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/DocumentId'

    AgreementParam:
      name: agreementId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/AgreementId'

    InvoiceParam:
      name: invoiceId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/InvoiceId'

  schemas:
    OwnerId:
      type: string
      format: uuid

    PropertyId:
      type: string
      format: uuid

    UnitId:
      type: string
      format: uuid

    OwnershipId:
      type: string
      format: uuid

    AccountingId:
      type: string
      format: uuid

    DocumentId:
      type: string
      format: uuid

    AgreementId:
      type: string
      format: uuid

    InvoiceId:
      type: string
      format: uuid

    Date:
      type: string
      format: date

    DateTime:
      type: string
      format: date-time

    OwnerDto:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/OwnerId'
        active:
          type: boolean
        contractId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        street:
          type: string
        houseNr:
          type: string
        postalCode:
          type: string
        city:
          type: string
        phoneNr:
          type: string
        mobileNr:
          type: string

    ModifiableOwnerDto:
      type: object
      properties:
        active:
          type: boolean
          default: true
        contractId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        street:
          type: string
        houseNr:
          type: string
        postalCode:
          type: string
        city:
          type: string
        phoneNr:
          type: string
        mobileNr:
          type: string
      required:
        - firstName
        - lastName
        - street
        - houseNr
        - postalCode
        - city

    UnitDto:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UnitId'
        propertyId:
          $ref: '#/components/schemas/PropertyId'
        active:
          type: boolean
        subject:
          type: string
        valueRatio:
          type: integer
        mpan:
          description: meter point administration number
          type: string

    PropertyDto:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/PropertyId'
        active:
          type: boolean
          default: true
        street:
          type: string
        houseNr:
          type: string
        postalCode:
          type: string
        city:
          type: string

    ModifiablePropertyDto:
      type: object
      properties:
        active:
          type: boolean
          default: true
        street:
          type: string
        houseNr:
          type: string
        postalCode:
          type: string
        city:
          type: string
      required:
        - street
        - houseNr
        - postalCode
        - city

    ModifiableUnitDto:
      type: object
      properties:
        active:
          type: boolean
          default: true
        propertyId:
          $ref: '#/components/schemas/PropertyId'
        subject:
          type: string
        valueRatio:
          type: integer
        mpan:
          description: meter point administration number
          type: string
      required:
        - propertyId
        - subject

    OwnershipDto:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/OwnershipId'
        unitId:
          $ref: '#/components/schemas/UnitId'
        ownerId:
          $ref: '#/components/schemas/OwnerId'
        periodFrom:
          $ref: '#/components/schemas/Date'
        periodUpto:
          $ref: '#/components/schemas/Date'

    ModifiableOwnershipDto:
      type: object
      properties:
        unitId:
          $ref: '#/components/schemas/UnitId'
        ownerId:
          $ref: '#/components/schemas/OwnerId'
        periodFrom:
          $ref: '#/components/schemas/Date'
        periodUpto:
          $ref: '#/components/schemas/Date'
      required:
        - unitId
        - ownerId
        - periodFrom

    AccountingDto:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AccountingId'
        agreementId:
          $ref: '#/components/schemas/AgreementId'
        periodFrom:
          $ref: '#/components/schemas/Date'
        periodUpto:
          $ref: '#/components/schemas/Date'
        subject:
          type: string
        amountHighTariff:
          type: number
        amountLowTariff:
          type: number
        amountTotal:
          type: number

    ModifiableAccountingDto:
      type: object
      properties:
        agreementId:
          $ref: '#/components/schemas/AgreementId'
        periodFrom:
          $ref: '#/components/schemas/Date'
        periodUpto:
          $ref: '#/components/schemas/Date'
        subject:
          type: string
        amountHighTariff:
          type: number
        amountLowTariff:
          type: number
        amountTotal:
          type: number
      required:
        - subject

    AgreementDto:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AgreementId'
        periodFrom:
          $ref: '#/components/schemas/Date'
        periodUpto:
          $ref: '#/components/schemas/Date'
        highTariff:
          type: number
        lowTariff:
          type: number
        approved:
          $ref: '#/components/schemas/Date'

    ModifiableAgreementDto:
      type: object
      properties:
        periodFrom:
          $ref: '#/components/schemas/Date'
        periodUpto:
          $ref: '#/components/schemas/Date'
        highTariff:
          type: number
        lowTariff:
          type: number
        approved:
          $ref: '#/components/schemas/Date'
      required:
        - periodFrom
        - periodUpto
        - highTariff
        - lowTariff

    InvoiceDto:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/InvoiceId'
        accountingId:
          $ref: '#/components/schemas/AccountingId'
        unitId:
          $ref: '#/components/schemas/UnitId'
        usageHighTariff:
          type: number
          format: double
        usageLowTariff:
          type: number
          format: double
        usageTotal:
          type: number
          format: double
        amountHighTariff:
          type: number
        amountLowTariff:
          type: number
        amountTotal:
          type: number
        payed:
          $ref: '#/components/schemas/Date'

    ModifiableInvoiceDto:
      type: object
      properties:
        accountingId:
          $ref: '#/components/schemas/AccountingId'
        unitId:
          $ref: '#/components/schemas/UnitId'
        usageHighTariff:
          type: number
          format: double
        usageLowTariff:
          type: number
          format: double
        usageTotal:
          type: number
          format: double
        amountHighTariff:
          type: number
        amountLowTariff:
          type: number
        amountTotal:
          type: number
        payed:
          $ref: '#/components/schemas/Date'
      required:
        - accountingId
        - unitId

    DocumentDto:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/DocumentId'
        name:
          type: string
        filename:
          type: string
        mimeType:
          type: string

    ModifiableDocumentDto:
      type: object
      properties:
        name:
          type: string
        mimeType:
          type: string
        content:
          type: string
          format: binary

    OwnerOverviewDto:
      type: object
      properties:
        total:
          type: integer

    UnitOverviewDto:
      type: object
      properties:
        total:
          type: integer

    AccountingOverviewDto:
      type: object
      properties:
        total:
          type: integer

    ErrorDto:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string